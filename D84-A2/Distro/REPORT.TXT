CSC D84 - Artificial Intelligence

Assignment 2 - MiniMax and Game Trees 

This assignment is worth:

10 AIUs (Artificial Intelligence Units)
toward the 35% assignment component of your final
mark.

________________________________________________

Student Name 1 (last, first): Bisesar, Shevlin

Student Name 2 (last, first): Korapaty, Venkat

Student number 1: 1001307766

Student number 2: 1001365060

UTORid 1: korapaty

UTORid 2: bisesars

READ THIS AND SIGN YOUR NAME AT THE END:

 I certify that I have read the UTSC code on academic
honesty and plaguarism. All work submitted as part
of this assignment is my own.

	Signed: Shevlin Bisesar 	Venkat Korapaty


(-5 marks for failing to provide the identifying
 information requested above)
________________________________________________

Answer the following questions. Be concise and clear
but explain carefully when needed.

1 .- (5 marks) Explain the design of your utility function.
     Describe all the factors that influence its value, and
     how their influence was evaluated and integrated into
     a single, meaningful value. Convince us that your utility
     makes sense!

	First thing we do is we calculate, at depth 0, the mice to all
	other locations, and cheeses to all other locations. We calculate this
	once at depth = 0 to minimize time complexity.
	Check the closest cat and see how many walls are around it.
	For the cheese, we pick the one with the least amount of walls
	around it, and get the distance from it. We check the walls around
	the mouses area, to see if there's a chance of getting cornered.
	We then get the difference of cat's and cheese's distance, and use
	a ratio of that and the mouses walls.

2 .- (2 marks) Ignoring computation time, what is the effect of
     search depth (number of turns) on the chances of the mouse
     winning the game. 
	We generally have a better mouse.

3 .- (2 marks) What situations will cause your mouse to lose?
     can these be fixed either with the utility function, or
     by changing the search depth? if so, how?
	When multiple cheeses are surrounded in corners and we have
	cats behind us. If we go for a cheese, the cats can trap and kill us.
	To fix this, you'd have to calculate exactly which cheese and what path
	to go through, while accounting for the cats ganging up together.

4 .- (2 marks) Compare cats with smartness=.8 against cats with
     smartness=1 - which are harder for your mouse to beat?
     why do you think that is?
	0.8 is a bit harder for us to beat. This is because they stay
	around spots that make it harder for us to go to a cheese.

5 .- (2 marks) Can the mouse be made unbeatable by having an
     optimal utility function?
	No. There are situations where it is impossible to win.

6 .- (2 bonus marks) Could a human playing the game in place
      of the mouse do better than your code? (yes, no, and
      a reasonable explanation of why)
	There exists a human in the set of all humans, that is really good
	at video games. Our code isn't perfect, but a human can account for
	certain situations that we don't. Such as avoiding cheeses trapped
	every time.

_____________________________________________________

Mark with an 'x' where appropriate. If something is only
working partially, briefly describe what works, what
doesn't work, or what problems exist.
	
	Complete/Working	Partial		Not done

Utility		x
 function

MiniMax		x

Alpha/Beta	x
 pruning
_____________________________________________________

Marking:

(10 marks) Implemented a non-trivial, clever, and
           effective utility function. It allows the
           mouse to win the game often. 

(10 marks) Correctly implementing MiniMax. The algorithm
           should produce the expected behaviour. The
           mouse should take a reasonable path to the
           cheese and avoid cats. The cats will try to
           catch the mouse. Mouse is not easy to catch.

(10 marks) Implemented alpha-beta pruning. The algorithm
           significantly reduces the amount of search
           while producing identical results as those
           from standard MiniMax 

(15 marks) Competitive (TA assigned) based on how smart
           your mouse is (this is related to your
           utility function above!)

(15 marks) Answers in this report file

(2 bonus)  Bonus!

Total for A2:       / out of 60


